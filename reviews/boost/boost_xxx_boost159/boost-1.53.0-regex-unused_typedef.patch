diff -up ./boost/regex/icu.hpp~ ./boost/regex/icu.hpp
--- ./boost/regex/icu.hpp~	2011-10-16 14:19:37.000000000 +0200
+++ ./boost/regex/icu.hpp	2013-07-22 23:32:44.346321967 +0200
@@ -423,7 +423,6 @@ bool do_regex_match(BidiIterator first, 
 {
    typedef u16_to_u32_iterator<BidiIterator, UChar32> conv_type;
    typedef match_results<conv_type>                   match_type;
-   typedef typename match_type::allocator_type        alloc_type;
    match_type what;
    bool result = ::boost::regex_match(conv_type(first, first, last), conv_type(last, first, last), what, e, flags);
    // copy results across to m:
@@ -439,7 +438,6 @@ bool do_regex_match(BidiIterator first, 
 {
    typedef u8_to_u32_iterator<BidiIterator, UChar32>  conv_type;
    typedef match_results<conv_type>                   match_type;
-   typedef typename match_type::allocator_type        alloc_type;
    match_type what;
    bool result = ::boost::regex_match(conv_type(first, first, last), conv_type(last, first, last), what, e, flags);
    // copy results across to m:
@@ -598,7 +596,6 @@ bool do_regex_search(BidiIterator first,
 {
    typedef u16_to_u32_iterator<BidiIterator, UChar32> conv_type;
    typedef match_results<conv_type>                   match_type;
-   typedef typename match_type::allocator_type        alloc_type;
    match_type what;
    bool result = ::boost::regex_search(conv_type(first, first, last), conv_type(last, first, last), what, e, flags, conv_type(base));
    // copy results across to m:
@@ -615,7 +612,6 @@ bool do_regex_search(BidiIterator first,
 {
    typedef u8_to_u32_iterator<BidiIterator, UChar32>  conv_type;
    typedef match_results<conv_type>                   match_type;
-   typedef typename match_type::allocator_type        alloc_type;
    match_type what;
    bool result = ::boost::regex_search(conv_type(first, first, last), conv_type(last, first, last), what, e, flags, conv_type(base));
    // copy results across to m:
diff -up ./boost/regex/v4/regex_format.hpp~ ./boost/regex/v4/regex_format.hpp
--- ./boost/regex/v4/regex_format.hpp~	2012-05-24 12:03:48.000000000 +0200
+++ ./boost/regex/v4/regex_format.hpp	2013-07-22 23:31:06.466740621 +0200
@@ -1064,7 +1064,6 @@ struct format_functor_c_string
    template <class OutputIter>
    OutputIter operator()(const Match& m, OutputIter i, boost::regex_constants::match_flag_type f, const Traits& t = Traits())
    {
-      typedef typename Match::char_type char_type;
       const charT* end = func;
       while(*end) ++end;
       return regex_format_imp(i, m, func, end, f, t);
@@ -1083,7 +1082,6 @@ struct format_functor_container
    template <class OutputIter>
    OutputIter operator()(const Match& m, OutputIter i, boost::regex_constants::match_flag_type f, const Traits& t = Traits())
    {
-      typedef typename Match::char_type char_type;
       return re_detail::regex_format_imp(i, m, func.begin(), func.end(), f, t);
    }
 private:
diff -up ./boost/regex/v4/regex_split.hpp~ ./boost/regex/v4/regex_split.hpp
--- ./boost/regex/v4/regex_split.hpp~	2007-11-25 19:07:19.000000000 +0100
+++ ./boost/regex/v4/regex_split.hpp	2013-07-22 23:31:29.098875039 +0200
@@ -107,7 +107,6 @@ std::size_t regex_split(OutputIterator o
                    std::size_t max_split)
 {
    typedef typename std::basic_string<charT, Traits1, Alloc1>::const_iterator  ci_t;
-   typedef typename match_results<ci_t>::allocator_type                        match_allocator;
    ci_t last = s.begin();
    std::size_t init_size = max_split;
    re_detail::split_pred<OutputIterator, charT, Traits1, Alloc1> pred(&last, &out, &max_split);
