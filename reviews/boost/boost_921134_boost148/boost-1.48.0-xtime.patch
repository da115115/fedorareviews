diff -up boost_1_48_0/boost/thread/xtime.hpp\~ boost_1_48_0/boost/thread/xtime.hpp
--- boost_1_48_0/boost/thread/xtime.hpp~	2008-06-18 15:01:08.000000000 +0200
+++ boost_1_48_0/boost/thread/xtime.hpp	2012-05-24 20:45:18.000000000 +0200
@@ -18,18 +18,6 @@
 
 namespace boost {
 
-enum xtime_clock_types
-{
-    TIME_UTC=1
-//    TIME_TAI,
-//    TIME_MONOTONIC,
-//    TIME_PROCESS,
-//    TIME_THREAD,
-//    TIME_LOCAL,
-//    TIME_SYNC,
-//    TIME_RESOLUTION
-};
-
 struct xtime
 {
 #if defined(BOOST_NO_INT64_T)
diff -up boost_1_48_0/libs/thread/src/pthread/timeconv.inl\~ boost_1_48_0/libs/thread/src/pthread/timeconv.inl
--- boost_1_48_0/libs/thread/src/pthread/timeconv.inl~	2010-04-01 17:04:15.000000000 +0200
+++ boost_1_48_0/libs/thread/src/pthread/timeconv.inl	2012-05-24 20:55:43.000000000 +0200
@@ -20,8 +20,8 @@ const int NANOSECONDS_PER_MICROSECOND =
 inline void to_time(int milliseconds, boost::xtime&amp; xt)
 {
     int res = 0;
-    res = boost::xtime_get(&amp;xt, boost::TIME_UTC);
-    BOOST_ASSERT(res == boost::TIME_UTC);
+    res = boost::xtime_get(&amp;xt, TIME_UTC);
+    BOOST_ASSERT(res == TIME_UTC);
 
     xt.sec += (milliseconds / MILLISECONDS_PER_SECOND);
     xt.nsec += ((milliseconds % MILLISECONDS_PER_SECOND) *
@@ -57,8 +57,8 @@ inline void to_timespec_duration(const b
 {
     boost::xtime cur;
     int res = 0;
-    res = boost::xtime_get(&amp;cur, boost::TIME_UTC);
-    BOOST_ASSERT(res == boost::TIME_UTC);
+    res = boost::xtime_get(&amp;cur, TIME_UTC);
+    BOOST_ASSERT(res == TIME_UTC);
 
     if (boost::xtime_cmp(xt, cur) &lt;= 0)
     {
@@ -88,8 +88,8 @@ inline void to_duration(boost::xtime xt,
 {
     boost::xtime cur;
     int res = 0;
-    res = boost::xtime_get(&amp;cur, boost::TIME_UTC);
-    BOOST_ASSERT(res == boost::TIME_UTC);
+    res = boost::xtime_get(&amp;cur, TIME_UTC);
+    BOOST_ASSERT(res == TIME_UTC);
 
     if (boost::xtime_cmp(xt, cur) &lt;= 0)
         milliseconds = 0;
@@ -110,8 +110,8 @@ inline void to_microduration(boost::xtim
 {
     boost::xtime cur;
     int res = 0;
-    res = boost::xtime_get(&amp;cur, boost::TIME_UTC);
-    BOOST_ASSERT(res == boost::TIME_UTC);
+    res = boost::xtime_get(&amp;cur, TIME_UTC);
+    BOOST_ASSERT(res == TIME_UTC);
 
     if (boost::xtime_cmp(xt, cur) &lt;= 0)
         microseconds = 0;
